/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { HelloWorld, HelloWorldInterface } from "../HelloWorld";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "initMessage",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "oldStr",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newStr",
        type: "string",
      },
    ],
    name: "MessageUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newMessage",
        type: "string",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b5060405162000dde38038062000dde8339818101604052810190620000369190620001d3565b805f908162000046919062000459565b50506200053d565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000af8262000067565b810181811067ffffffffffffffff82111715620000d157620000d062000077565b5b80604052505050565b5f620000e56200004e565b9050620000f38282620000a4565b919050565b5f67ffffffffffffffff82111562000115576200011462000077565b5b620001208262000067565b9050602081019050919050565b5f5b838110156200014c5780820151818401526020810190506200012f565b5f8484015250505050565b5f6200016d6200016784620000f8565b620000da565b9050828152602081018484840111156200018c576200018b62000063565b5b620001998482856200012d565b509392505050565b5f82601f830112620001b857620001b76200005f565b5b8151620001ca84826020860162000157565b91505092915050565b5f60208284031215620001eb57620001ea62000057565b5b5f82015167ffffffffffffffff8111156200020b576200020a6200005b565b5b6200021984828501620001a1565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200027157607f821691505b6020821081036200028757620002866200022c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002eb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002ae565b620002f78683620002ae565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003416200033b62000335846200030f565b62000318565b6200030f565b9050919050565b5f819050919050565b6200035c8362000321565b620003746200036b8262000348565b848454620002ba565b825550505050565b5f90565b6200038a6200037c565b6200039781848462000351565b505050565b5b81811015620003be57620003b25f8262000380565b6001810190506200039d565b5050565b601f8211156200040d57620003d7816200028d565b620003e2846200029f565b81016020851015620003f2578190505b6200040a62000401856200029f565b8301826200039c565b50505b505050565b5f82821c905092915050565b5f6200042f5f198460080262000412565b1980831691505092915050565b5f6200044983836200041e565b9150826002028217905092915050565b620004648262000222565b67ffffffffffffffff81111562000480576200047f62000077565b5b6200048c825462000259565b62000499828285620003c2565b5f60209050601f831160018114620004cf575f8415620004ba578287015190505b620004c685826200043c565b86555062000535565b601f198416620004df866200028d565b5f5b828110156200050857848901518255600182019150602085019450602081019050620004e1565b8683101562000528578489015162000524601f8916826200041e565b8355505b6001600288020188555050505b505050505050565b610893806200054b5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80633d7403a314610038578063e21f37ce14610054575b5f80fd5b610052600480360381019061004d9190610409565b610072565b005b61005c61016c565b60405161006991906104ca565b60405180910390f35b5f80805461007f90610517565b80601f01602080910402602001604051908101604052809291908181526020018280546100ab90610517565b80156100f65780601f106100cd576101008083540402835291602001916100f6565b820191905f5260205f20905b8154815290600101906020018083116100d957829003601f168201915b50505050509050815f908161010b91906106ed565b5061012f60405180606001604052806022815260200161083c6022913982846101f7565b7f5b4717af615de779c9c12885d202645882ad93995957a99a4a1a145b3ccdbc1081836040516101609291906107bc565b60405180910390a15050565b5f805461017890610517565b80601f01602080910402602001604051908101604052809291908181526020018280546101a490610517565b80156101ef5780601f106101c6576101008083540402835291602001916101ef565b820191905f5260205f20905b8154815290600101906020018083116101d257829003601f168201915b505050505081565b61029183838360405160240161020f939291906107f1565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610296565b505050565b5f815190505f6a636f6e736f6c652e6c6f679050602083015f808483855afa5050505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61031b826102d5565b810181811067ffffffffffffffff8211171561033a576103396102e5565b5b80604052505050565b5f61034c6102bc565b90506103588282610312565b919050565b5f67ffffffffffffffff821115610377576103766102e5565b5b610380826102d5565b9050602081019050919050565b828183375f83830152505050565b5f6103ad6103a88461035d565b610343565b9050828152602081018484840111156103c9576103c86102d1565b5b6103d484828561038d565b509392505050565b5f82601f8301126103f0576103ef6102cd565b5b813561040084826020860161039b565b91505092915050565b5f6020828403121561041e5761041d6102c5565b5b5f82013567ffffffffffffffff81111561043b5761043a6102c9565b5b610447848285016103dc565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561048757808201518184015260208101905061046c565b5f8484015250505050565b5f61049c82610450565b6104a6818561045a565b93506104b681856020860161046a565b6104bf816102d5565b840191505092915050565b5f6020820190508181035f8301526104e28184610492565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061052e57607f821691505b602082108103610541576105406104ea565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105a37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610568565b6105ad8683610568565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6105f16105ec6105e7846105c5565b6105ce565b6105c5565b9050919050565b5f819050919050565b61060a836105d7565b61061e610616826105f8565b848454610574565b825550505050565b5f90565b610632610626565b61063d818484610601565b505050565b5b81811015610660576106555f8261062a565b600181019050610643565b5050565b601f8211156106a55761067681610547565b61067f84610559565b8101602085101561068e578190505b6106a261069a85610559565b830182610642565b50505b505050565b5f82821c905092915050565b5f6106c55f19846008026106aa565b1980831691505092915050565b5f6106dd83836106b6565b9150826002028217905092915050565b6106f682610450565b67ffffffffffffffff81111561070f5761070e6102e5565b5b6107198254610517565b610724828285610664565b5f60209050601f831160018114610755575f8415610743578287015190505b61074d85826106d2565b8655506107b4565b601f19841661076386610547565b5f5b8281101561078a57848901518255600182019150602085019450602081019050610765565b868310156107a757848901516107a3601f8916826106b6565b8355505b6001600288020188555050505b505050505050565b5f6040820190508181035f8301526107d48185610492565b905081810360208301526107e88184610492565b90509392505050565b5f6060820190508181035f8301526108098186610492565b9050818103602083015261081d8185610492565b905081810360408301526108318184610492565b905094935050505056fe5570646174696e67206d6573736167652066726f6d202725732720746f2027257327a2646970667358221220bf42fdf727e1ee32567df8e6730edd24f9f5dde5621f72b0b0e2bfdaf59618e564736f6c63430008140033";

type HelloWorldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloWorldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloWorld__factory extends ContractFactory {
  constructor(...args: HelloWorldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initMessage: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initMessage, overrides || {});
  }
  override deploy(
    initMessage: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initMessage, overrides || {}) as Promise<
      HelloWorld & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HelloWorld__factory {
    return super.connect(runner) as HelloWorld__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloWorldInterface {
    return new Interface(_abi) as HelloWorldInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): HelloWorld {
    return new Contract(address, _abi, runner) as unknown as HelloWorld;
  }
}
